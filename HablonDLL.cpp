//#include "UnitMyForm.h"
#include "Hablon.h"
//-----------------------------------------------------------------------------
#include <stdio.h>
// Указатели на системные структуры и блоки  доступные пользователю библиотеки
//PtrSisTableDLL
//PtrPaspDLL
//PtrPaspDLL
//PtrSistemDLL
//PtrTableDLL
//PtrTipParDLL
//PtrBlok_tarDLL
//PtrBlokRKDLL
//PtrMessageDLL    // Адрес первой структуры Message;
//FILE *str;

/*                        Заголовки применяемых функций
float qcg(float *);
float rpr(float *);
float prm(float *,float *);
float dif(float *,float *);
float sgl(float *);
float ct(float *);
 */
                                 // Пример описания параметров
float *habs,*toporn,*m1;          // адреса физики входных параметров из системы MinimaxWin( обязательно указатели )
int   *m1_kod;                    // адреса кодов входных параметров из системы MinimaxWin( обязательно указатели )
float max_r,habs_r;              // выходные параметры в систему MinimaxWin
float ttpir,ttkadr,TT,ttn1;      // местные Глобальные параметры библиотеки

//----------------------------------------------------------------------

//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// Получает из системы адреса входных параметров,необходимые для расчетов
void _stdcall InitAdresAPIInp(void)
{
int i,j,k;                           // Временно необходимые переменные
i=1;
//AnsiString CharDirNew;
//CharDirNew = GetCurrentDir();
m1 = (float *)FunAdresParamInp("m1",1,0);                  // ПРИМЕР
m1_kod = (int *)FunAdresParamInp("m1",1,1);                // ПРИМЕР
habs = (float *)FunAdresParamInp("habs",1,0);              // ПРИМЕР
toporn = (float *)FunAdresParamInp("toporn",1,0);          // ПРИМЕР
                     // Первый Параметр - Идентификатор параметра
                     // Второй Параметр - номер системы(1,2,3,4)
                     // Третий Параметр - =0 для получения адреса физики
                     //                   =1 для получения адреса кода
return;
}

//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// Передает в систему адреса расчетных параметров
void _stdcall InitAdresAPIOut(void)
{
int i,j,k;                                      // Временно необходимые переменные

FunAdresParamOut("max_r",(void *)&max_r,"m1",'f',"");                                // ПРИМЕР
FunAdresParamOut("habs_r",(void *)&habs_r,"habs",'f',"Высота Барометр. Расчетная");  // ПРИМЕР
                     // Первый Параметр - Идентификатор расчетного параметра
                     // Второй Параметр - Адрес расчетного параметра
                     // Третий Параметр - Идентификатор Опорного параметра
                     // Четвертый Параметр - тип параметра(f - вещественный,...)
                     // Пятый Параметр - наименование расчетного параметра

return;
}
/*
//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// СОЗДАЕТ ПОЛЬЗОВАТЕЛЬСКОЕ ОКНО
bool _stdcall UserFormFun(void)
{
//extern "C" __declspec(dllexport) void _stdcall OpenMyWindow()
// Если библиотека не использует свою форму использовать оператор "return(false);"
// Иначе использовать следующий алгоритм
 if(!MyForm)
 Application->CreateForm(__classid(TMyForm), &MyForm);
 MyForm->ShowModal();
 return(true);
}
*/
//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// ПЕРЕД ЗАПУСКОМ ОБРАБОТКИ ВРЕМЕННОГО ИНТЕРВАЛА
void _stdcall UserProcBeginInterval(void)
{
// Алгоритм Пользователя
 return;
}

//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// ПРИ ЗАВЕРШЕНИИ ОБРАБОТКИ ВРЕМЕННОГО ИНТЕРВАЛА
void _stdcall UserProcEndInterval(void)
{
// Алгоритм Пользователя
 return;
}

//-----------------------------------------------------------------------------
// ФУНКЦИЯ ВЫЗЫВЕТСЯ СИСТЕМНОЙ ПРОГРАММОЙ "Proect_Minimax"
// В ЦИКЛЕ ПО ВРЕМЕННОМУ ИНТЕРВАЛУ
void _stdcall ProcUser(void)
{
int i,j,k;                           // Временно необходимые переменные
//struct Message *PtrM;
// Системные Флаги
// PtrFlagPotokVizualDLL->FileOutNoWrite       =  true   -    Запрещена запись в выходной системный файл
//                                             =  false  -    Разрешена                 -"-
// PtrFlagPotokVizualDLL->PageEndStop          =  1      -    Закончить работу системы

      // Алгоритм Пользователя

ttn1 = *toporn;                                   // ПРИМЕР
max_r = *m1 * 2;                                  // ПРИМЕР
return;
}
//==============================================================================

